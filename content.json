{"pages":[],"posts":[{"title":"当 git pull 碰到拒绝合并无关历史","text":"问题描述很久之前在 Github 上建了个仓库，里面只有一个 README.md 文件。 突然有天，我想把本地的一个项目传上去，然后就碰到了这样一个问题！ 当我 添加远程仓库 后准备提交代码时，git 提示我请先使用 git pull。 没毛病，老铁，就应该这样！ 但当我 git pull origin master 时就出现了这样一条错误： 1fatal: refusing to merge unrelated histories // 拒绝合并无关历史 解决办法在拉取时使用以下命令： 1git pull origin master --allow-unrelated-histories 对此，Git 的 官方文档 是这样描述的： By default, git merge command refuses to merge histories that do not share a common ancestor. This option can be used to override this safety when merging histories of two projects that started their lives independently. As that is a very rare occasion, no configuration variable to enable this by default exists and will not be added.默认情况下，git合并命令拒绝合并没有共同祖先的历史。当两个项目的历史独立地开始时，这个选项可以被用来覆盖这个安全。由于这是一个非常少见的情况，因此没有默认存在的配置变量，也不会添加。（有道翻译） 总结本文所提到的情况只是一个很简单的问题，--allow-unrelated-histories 似乎并不能解决所有人的麻烦。比如这位网友碰到的问题 Git没有共同祖先的两个分支如何合并 ,远程仓库和本地的差异很零散而且似乎都很重要，使用 --allow-unrelated-histories 合并出的结果可能就会不尽人意，所以还要具体情况具体分析喽！ 参考 git无法pull仓库refusing to merge unrelated histories Git refusing to merge unrelated histories（建议翻墙） Git没有共同祖先的两个分支如何合并？","link":"/2017/09/03/git-pull-refusing-merge.html"},{"title":"常见正则表达式","text":"收集常用正则表达式，不定期更新。 正则表达式12// 邮箱[\\w\\d_-]+@[\\w\\d_-]+(\\.[\\w\\d_-]+)+ 12// 单词\\b(iphone|ipad)\\b 12// 汉字[\\u4e00-\\u9fa5]","link":"/2017/10/02/regular-expression-library.html"},{"title":"通过QQ号码获取QQ头像、昵称以及空间头像","text":"从网上搜罗了一堆获取QQ头像的方法，基本上都是通过简单的链接即可实现，在这里做下记录和总结！ QQ头像 http://q1.qlogo.cn/g?b=qq&amp;nk=945794520&amp;s=100 http://q1.qlogo.cn/g?b=qq&amp;k=yJjDKicYbQOuvhb22ckmr9Q&amp;s=100 http://q1.qlogo.cn/headimg_dl?dst_uin=945794520&amp;spec=100 这是我目前知道的三种方式，准确的说是两种。 因为前两个链接其实是同一个，区别在于第一个传递的参数 nk 是QQ号，而第二个传递的参数 k 是什么就不得而知了。 当然，如果能知道这两个参数的转换方式就再好不过了，那样至少保证了QQ号不被直接截获！ 另外，这三个链接的最后一个参数 s 或是 spec 是头像尺寸的大小，其对应关系如下，暂时没发现更多的尺寸。 s / spec px 1 40 × 40 2 40 × 40 3 100 × 100 4 140 × 140 5 640 × 640 40 40 × 40 100 100 × 100 QQ昵称和QQ空间头像 http://r.pengyou.com/fcg-bin/cgi_get_portrait.fcg?uins=945794520 http://qlogo1.store.qq.com/qzone/945794520/945794520/100 QQ昵称和QQ空间头像的获取其实都是通过第一个链接返回的 jsonp 数据中得到的 1portraitCallBack({\"945794520\":[\"http://qlogo1.store.qq.com/qzone/945794520/945794520/100\",6419,-1,0,0,0,\"这里是昵称\",0]}) 其中包括了QQ空间头像的链接地址和昵称，QQ昵称拿去干嘛我就不管了。 但QQ空间头像可不要以为随便放进 &lt;img /&gt; 就行了。 因为，机智如鹅厂，早已做了图像防盗链处理！","link":"/2017/03/21/get-qq-avatar-by-number.html"},{"title":"百度编辑器（ueditor）踩坑，图片转存无法使用","text":"在使用 百度编辑器 的过程中碰到了一些问题，图片转存功能无法使用，即便是疯狂地在官方 Demo、文档、论坛甚至是 GitHub 上也没找到理想的答案。(┗|｀O′|┛) (真是日了狗) 问题描述默认情况下，从 Word 中复制的内容粘贴在编辑器时，图片不会自动上传保存，除非单独复制粘贴图片。 但是在官方 Demo 及演示中，Word 中的图片并不会变为上图中的提示贴图，而是变为尺寸与原图比例一致的一片空白。 与此雷同的一个问题是，当你插入一个锚点，点击 html 视图，发现标签一片空白，再切回来时锚点又不见了。 根据这点终于找到了解决的方案！ˋ( ° ▽、° ) （尴尬而不失礼貌的微笑） 解决办法在配置文件 ueditor.config.js 的最下方有这样一组配置： 1234567891011121314151617// xss 过滤是否开启,inserthtml等操作,xssFilterRules: true//input xss过滤,inputXssFilter: true//output xss过滤,outputXssFilter: true// xss过滤白名单 名单来源: https://raw.githubusercontent.com/leizongmin/js-xss/master/lib/default.js,whitList: { a: ['target', 'href', 'title', 'class', 'style'], abbr: ['title', 'class', 'style'], // ... 部分省略 i: ['class', 'style'], img: ['src', 'alt', 'title', 'width', 'height', 'id', '_src', 'loadingclass', 'class', 'data-latex'], ins: ['datetime'], // ... 部分省略 video: ['autoplay', 'controls', 'loop', 'preload', 'src', 'height', 'width', 'class', 'style']} 原来，在默认情况下 ueditor 开启了 XSS 过滤（过滤、输入过滤、输出过滤都有相应的配置开关），任何不在 whitList 白名单上的标签及属性都会在转换时丢失。 这就直接导致了一些需要使用特殊标签或属性的功能直接失效，比如插入音乐、插入锚点、图片转存等。 最直接的解决办法就是关闭 XSS 过滤，可以注释掉上述配置或将上述三项设为 false，另一种方案就是将需要的标签及属性添加到白名单。 插入锚点需要给 a 标签添加 name 属性，给 img 标签添加 anchorname 属性 图片转存需要给 img 标签添加 word_img、style 属性 其他受影响功能这里不再赘述，如需帮助请在下方留言！ 总结这个困扰了我好几天，甚至一心想着解决这个 BUG 给百度贡献点代码 ┑(￣Д ￣)┍ 但是羊毛出在羊身上，找问题还是得找准方向，一针见血，瞬间解决！ 参考 百度编辑器（Ueditor）插入锚点功能分析及BUG修复","link":"/2018/02/01/ueditor-xss-whitlist.html"}],"tags":[{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"正则","slug":"regex","link":"/tags/regex/"},{"name":"API","slug":"api","link":"/tags/api/"},{"name":"PHP","slug":"php","link":"/tags/php/"},{"name":"JavaScript","slug":"javascript","link":"/tags/javascript/"},{"name":"百度编辑器","slug":"ueditor","link":"/tags/ueditor/"}],"categories":[{"name":"Git","slug":"Git","link":"/categories/Git/"},{"name":"正则","slug":"regex","link":"/categories/regex/"},{"name":"未分类","slug":"uncategorized","link":"/categories/uncategorized/"},{"name":"PHP","slug":"php","link":"/categories/php/"},{"name":"JavaScript","slug":"javascript","link":"/categories/javascript/"}]}